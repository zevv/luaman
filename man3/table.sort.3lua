'\" t
.\"     Title: table.sort
.\"    Author: [FIXME: author] [see http://docbook.sf.net/el/author]
.\" Generator: DocBook XSL Stylesheets v1.78.1 <http://docbook.sf.net/>
.\"      Date: 2015/01/06
.\"    Manual: \ \&
.\"    Source: \ \&
.\"  Language: English
.\"
.TH "TABLE\&.SORT" "3lua" "2015/01/06" "\ \&" "\ \&"
.\" -----------------------------------------------------------------
.\" * Define some portability stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
table.sort \- table\&.sort (list [, comp])
.SH "SYNOPSIS"
.sp
\fBtable\&.sort (list [, comp])\fR
.sp
Sorts list elements in a given order, in\-place, from \fBlist[1]\fR to \fBlist[#list]\fR\&. If \fBcomp\fR is given, then it must be a function that receives two list elements and returns true when the first element must come before the second in the final order (so that \fBnot comp(list[i+1],list[i])\fR will be true after the sort)\&. If \fBcomp\fR is not given, then the standard Lua operator \fB<\fR is used instead\&.
.sp
The sort algorithm is not stable; that is, elements considered equal by the given order may have their relative positions changed by the sort\&.
