'\" t
.\"     Title: collectgarbage
.\"    Author: [FIXME: author] [see http://docbook.sf.net/el/author]
.\" Generator: DocBook XSL Stylesheets v1.78.1 <http://docbook.sf.net/>
.\"      Date: 2015/01/06
.\"    Manual: \ \&
.\"    Source: \ \&
.\"  Language: English
.\"
.TH "COLLECTGARBAGE" "3lua" "2015/01/06" "\ \&" "\ \&"
.\" -----------------------------------------------------------------
.\" * Define some portability stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
collectgarbage \- collectgarbage ([opt [, arg]])
.SH "SYNOPSIS"
.sp
\fBcollectgarbage ([opt [, arg]])\fR
.sp
This function is a generic interface to the garbage collector\&. It performs different functions according to its first argument, \fBopt\fR:
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
"\fBcollect\fR": performs a full garbage\-collection cycle\&. This is the default option\&.
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
"\fBstop\fR": stops automatic execution of the garbage collector\&. The collector will run only when explicitly invoked, until a call to restart it\&.
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
"\fBrestart\fR": restarts automatic execution of the garbage collector\&.
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
"\fBcount\fR": returns the total memory in use by Lua in Kbytes\&. The value has a fractional part, so that it multiplied by 1024 gives the exact number of bytes in use by Lua (except for overflows)\&.
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
"\fBstep\fR": performs a garbage\-collection step\&. The step "size" is controlled by
\fBarg\fR\&. With a zero value, the collector will perform one basic (indivisible) step\&. For non\-zero values, the collector will perform as if that amount of memory (in KBytes) had been allocated by Lua\&. Returns true if the step finished a collection cycle\&.
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
"\fBsetpause\fR": sets
\fBarg\fR
as the new value for the pause of the collector (see \(sc2\&.5)\&. Returns the previous value for pause\&.
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
"\fBsetstepmul\fR": sets
\fBarg\fR
as the new value for the step multiplier of the collector (see \(sc2\&.5)\&. Returns the previous value for step\&.
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
"\fBisrunning\fR": returns a boolean that tells whether the collector is running (i\&.e\&., not stopped)\&.
.RE
