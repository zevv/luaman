'\" t
.\"     Title: lual_newmetatable
.\"    Author: [FIXME: author] [see http://docbook.sf.net/el/author]
.\" Generator: DocBook XSL Stylesheets v1.78.1 <http://docbook.sf.net/>
.\"      Date: 2015/01/06
.\"    Manual: \ \&
.\"    Source: \ \&
.\"  Language: English
.\"
.TH "LUAL_NEWMETATABLE" "3lua" "2015/01/06" "\ \&" "\ \&"
.\" -----------------------------------------------------------------
.\" * Define some portability stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
luaL_newmetatable \- luaL_newmetatable
.SH "SYNOPSIS"
.sp
[\-0, +1, e]
.sp
.nf
 int luaL_newmetatable (lua_State *L, const char *tname);
.fi
.sp
If the registry already has the key \fBtname\fR, returns 0\&. Otherwise, creates a new table to be used as a metatable for userdata, adds to this new table the pair \fB\fIname = tname\fR\fR\fB, adds to the registry the pair \fR\fB\fB[tname] = new table\fR\fR\fB, and returns 1\&. (The entry \fR\fB\fR\fBname\fR is used by some error\-reporting functions\&.)
.sp
In both cases pushes onto the stack the final value associated with \fBtname\fR in the registry\&.
