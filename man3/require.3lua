'\" t
.\"     Title: require
.\"    Author: [FIXME: author] [see http://docbook.sf.net/el/author]
.\" Generator: DocBook XSL Stylesheets v1.78.1 <http://docbook.sf.net/>
.\"      Date: 10/25/2014
.\"    Manual: \ \&
.\"    Source: \ \&
.\"  Language: English
.\"
.TH "REQUIRE" "3lua" "10/25/2014" "\ \&" "\ \&"
.\" -----------------------------------------------------------------
.\" * Define some portability stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
require \- require (modname)
.SH "SYNOPSIS"
.sp
\fBrequire (modname)\fR
.sp
Loads the given module\&. The function starts by looking into the \fBpackage\&.loaded\fR table to determine whether \fBmodname\fR is already loaded\&. If it is, then \fBrequire\fR returns the value stored at \fBpackage\&.loaded[modname]\fR\&. Otherwise, it tries to find a loader for the module\&.
.sp
To find a loader, \fBrequire\fR is guided by the \fBpackage\&.searchers\fR sequence\&. By changing this sequence, we can change how \fBrequire\fR looks for a module\&. The following explanation is based on the default configuration for \fBpackage\&.searchers\fR\&.
.sp
First \fBrequire\fR queries \fBpackage\&.preload[modname]\fR\&. If it has a value, this value (which must be a function) is the loader\&. Otherwise \fBrequire\fR searches for a Lua loader using the path stored in \fBpackage\&.path\fR\&. If that also fails, it searches for a C loader using the path stored in \fBpackage\&.cpath\fR\&. If that also fails, it tries an all\-in\-one loader (see \fBpackage\&.searchers\fR)\&.
.sp
Once a loader is found, \fBrequire\fR calls the loader with two arguments: \fBmodname\fR and an extra value dependent on how it got the loader\&. (If the loader came from a file, this extra value is the file name\&.) If the loader returns any non\-nil value, \fBrequire\fR assigns the returned value to \fBpackage\&.loaded[modname]\fR\&. If the loader does not return a non\-nil value and has not assigned any value to \fBpackage\&.loaded[modname]\fR, then \fBrequire\fR assigns true to this entry\&. In any case, \fBrequire\fR returns the final value of \fBpackage\&.loaded[modname]\fR\&.
.sp
If there is any error loading or running the module, or if it cannot find any loader for the module, then \fBrequire\fR raises an error\&.
