'\" t
.\"     Title: package.loadlib
.\"    Author: [FIXME: author] [see http://docbook.sf.net/el/author]
.\" Generator: DocBook XSL Stylesheets v1.78.1 <http://docbook.sf.net/>
.\"      Date: 2014/10/22
.\"    Manual: \ \&
.\"    Source: \ \&
.\"  Language: English
.\"
.TH "PACKAGE\&.LOADLIB" "3lua" "2014/10/22" "\ \&" "\ \&"
.\" -----------------------------------------------------------------
.\" * Define some portability stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
package.loadlib \- package\&.loadlib (libname, funcname)
.SH "SYNOPSIS"
.sp
\fBpackage\&.loadlib (libname, funcname)\fR
.sp
Dynamically links the host program with the C library \fBlibname\fR\&.
.sp
If \fBfuncname\fR is "\fB*\fR", then it only links with the library, making the symbols exported by the library available to other dynamically linked libraries\&. Otherwise, it looks for a function \fBfuncname\fR inside the library and returns this function as a C function\&. So, \fBfuncname\fR must follow the \fBlua_CFunction\fR prototype (see \fBlua_CFunction\fR)\&.
.sp
This is a low\-level function\&. It completely bypasses the package and module system\&. Unlike \fBrequire\fR, it does not perform any path searching and does not automatically adds extensions\&. \fBlibname\fR must be the complete file name of the C library, including if necessary a path and an extension\&. \fBfuncname\fR must be the exact name exported by the C library (which may depend on the C compiler and linker used)\&.
.sp
This function is not supported by Standard C\&. As such, it is only available on some platforms (Windows, Linux, Mac OS X, Solaris, BSD, plus other Unix systems that support the \fBdlfcn\fR standard)\&.
